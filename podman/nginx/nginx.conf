user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

 events {
    worker_connections 1024;
 }

 http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name openhab.cjssolutions.com;

        ssl_certificate /etc/letsencrypt/live/cjssolutions.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cjssolutions.com/privkey.pem;

        location / {
            proxy_pass http://host.containers.internal:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name keycloak.cjssolutions.com;

        ssl_certificate /etc/letsencrypt/live/cjssolutions.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cjssolutions.com/privkey.pem;

        location / {
            proxy_pass http://keycloak:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name pgadmin.cjssolutions.com;

        ssl_certificate /etc/letsencrypt/live/cjssolutions.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cjssolutions.com/privkey.pem;

        location / {
            proxy_pass http://pgadmin:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
 }

 stream {
    upstream postgres {
        server postgres:5432;
    }

    server {
        listen 5432;
        proxy_pass postgres;
    }
 }
